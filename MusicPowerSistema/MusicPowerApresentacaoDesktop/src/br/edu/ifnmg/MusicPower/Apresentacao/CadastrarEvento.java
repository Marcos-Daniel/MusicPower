/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.MusicPower.Apresentacao;

import br.edu.ifnmg.MusicPower.Entidades.ErroValidacao;
import br.edu.ifnmg.MusicPower.Entidades.Evento;
import br.edu.ifnmg.MusicPower.Entidades.EventoRepositorio;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import muiscpowerapresentacao.MuiscPowerApresentacao;

/**
 *
 * @author marcos
 */
public class CadastrarEvento extends javax.swing.JFrame {
    
    MuiscPowerApresentacao MPA = new MuiscPowerApresentacao();
    Evento novo = new Evento();
    ListarEventos telaListarEventos;
    EventoRepositorio dao = GerenciadorDeReferencias.getEvento();        
 
    /**
     * Creates new form CadastrarEvento
     */
    public CadastrarEvento() {
        initComponents();
    }

    CadastrarEvento(Evento evento, ListarEventos telaListarEventos) {
        initComponents();
        this.preencherCampos(evento);
        this.telaListarEventos = telaListarEventos;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCadastrarEvento = new javax.swing.JPanel();
        lblDescicao = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        lblDataInicio = new javax.swing.JLabel();
        txtDataInicio = new javax.swing.JFormattedTextField();
        lblDataTerminio = new javax.swing.JLabel();
        txtDataTerminio = new javax.swing.JFormattedTextField();
        lblValorInvestimento = new javax.swing.JLabel();
        txtValorInvestimento = new javax.swing.JFormattedTextField();
        btnCadastrar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnLimparCampos = new javax.swing.JButton();
        lblDescicao1 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlCadastrarEvento.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastrar evento"));

        lblDescicao.setText("*Descrição:");

        lblDataInicio.setText("*Data de Inicio:");

        try {
            txtDataInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblDataTerminio.setText("*Data terminio:");

        txtDataTerminio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        lblValorInvestimento.setText("*Valor do investimento:");

        txtValorInvestimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/MusicPower/Apresentacao/Imagens/1473025465_save.png"))); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/MusicPower/Apresentacao/Imagens/1473144169_logout.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        lblNome.setText("*Nome:");

        btnLimparCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifnmg/MusicPower/Apresentacao/Imagens/1474386963_Broom_stick.png"))); // NOI18N
        btnLimparCampos.setText("Limpar campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        lblDescicao1.setText("*Status:");

        txtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCadastrarEventoLayout = new javax.swing.GroupLayout(pnlCadastrarEvento);
        pnlCadastrarEvento.setLayout(pnlCadastrarEventoLayout);
        pnlCadastrarEventoLayout.setHorizontalGroup(
            pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastrarEventoLayout.createSequentialGroup()
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastrarEventoLayout.createSequentialGroup()
                        .addGap(0, 132, Short.MAX_VALUE)
                        .addComponent(btnLimparCampos)
                        .addGap(18, 18, 18)
                        .addComponent(btnCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSair)
                        .addGap(6, 6, 6))
                    .addGroup(pnlCadastrarEventoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDataTerminio)
                            .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNome, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblDescicao, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblDataInicio, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblValorInvestimento))
                            .addComponent(lblDescicao1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataTerminio, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtValorInvestimento)
                            .addComponent(txtNome, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDescricao)
                            .addComponent(txtDataInicio)
                            .addComponent(txtStatus))))
                .addContainerGap())
        );
        pnlCadastrarEventoLayout.setVerticalGroup(
            pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastrarEventoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescicao)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataInicio)
                    .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataTerminio)
                    .addComponent(txtDataTerminio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValorInvestimento)
                    .addComponent(txtValorInvestimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescicao1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(pnlCadastrarEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimparCampos)
                    .addComponent(btnCadastrar)
                    .addComponent(btnSair))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCadastrarEvento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCadastrarEvento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        
        this.dispose();
        
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            this.recuperaCampos();
            int codigo = novo.getId();
            
            if(codigo == 0){
                if(dao.Salvar(novo)){
                this.limparCampos();
                    JOptionPane.showMessageDialog(this, "Cadastro realizado com sucesso!!!");
                }else{
                    JOptionPane.showMessageDialog(this, "Ocorreu um erro durante a execução!");        
                }    
            }else{    
                dao.Alterar(novo);
                JOptionPane.showMessageDialog(this, "Evento editado com sucesso!!!", "Mensagem de confirmação", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }
        } catch (ParseException ex) {
            Logger.getLogger(CadastrarContas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ErroValidacao ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        this.limparCampos();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void txtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarEvento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel lblDataInicio;
    private javax.swing.JLabel lblDataTerminio;
    private javax.swing.JLabel lblDescicao;
    private javax.swing.JLabel lblDescicao1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblValorInvestimento;
    private javax.swing.JPanel pnlCadastrarEvento;
    private javax.swing.JFormattedTextField txtDataInicio;
    private javax.swing.JFormattedTextField txtDataTerminio;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JFormattedTextField txtValorInvestimento;
    // End of variables declaration//GEN-END:variables

    public void recuperaCampos() throws ParseException, ErroValidacao {
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
     
        Date dataDeInicio = new Date( format.parse(txtDataInicio.getText().trim()).getTime());
        if (!dataDeInicio.equals("")) {
           novo.setInicio(dataDeInicio);
        } else {
            JOptionPane.showMessageDialog(this, "ERRO, O CAMPO DATA INICIO É OBRIGATORIO");
        }

        Date dataDeTerminio = new Date( format.parse(txtDataTerminio.getText().trim()).getTime());
        if (!dataDeTerminio.equals("")) {
            novo.setTermino(dataDeTerminio);
        }else {
            JOptionPane.showMessageDialog(this, "ERRO, O CAMPO DATA TERMINIO É OBRIGATORIO");
        }

        String descricao = txtDescricao.getText().trim();
        if (!descricao.equals("")) {
            novo.setDescricao(descricao);        
        }else {
            JOptionPane.showMessageDialog(this, "ERRO, O CAMPO DESCRIÇÃO É OBRIGATORIO");
        }

        String nome = txtNome.getText().trim();
        if (!descricao.equals("")) {
            novo.setNome(nome);
        }else {
            JOptionPane.showMessageDialog(this, "ERRO, O CAMPO NOME É OBRIGATORIO");
        }

        Double valor = Double.parseDouble(txtValorInvestimento.getText().trim());
        if (valor != 0) {
            novo.setValor(valor);
        }else {
            JOptionPane.showMessageDialog(this, "ERRO, O CAMPO VALOR É OBRIGATORIO");
        }   
        
        String status = txtStatus.getText().trim();
        System.out.print(status);
        if (!status.equals("")) {
            novo.setStatus(status);
        }else {
            JOptionPane.showMessageDialog(this, "ERRO, O CAMPO STATUS É OBRIGATORIO");
        }
        
    }

    public void limparCampos() {
        txtDataInicio.setText("");
        txtDataTerminio.setText("");
        txtDescricao.setText("");
        txtNome.setText("");
        txtValorInvestimento.setText("");
        txtStatus.setText("");
    }
    
    public void preencherCampos(Evento evento){
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String inicio = format.format(evento.getInicio());
        String termino = format.format(evento.getTermino());
        String valor = String.valueOf(evento.getValor());
        
        novo = evento;
        txtDataInicio.setText(inicio);
        txtDataTerminio.setText(termino);
        txtDescricao.setText( evento.getDescricao());
        txtNome.setText( evento.getNome());
        txtStatus.setText(evento.getStatus());
        txtValorInvestimento.setText(valor);
    }
}
